Question :- https://leetcode.com/problems/01-matrix/description/

class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int m = mat.size();
        int n = mat[0].size();
        queue<vector<int>> q;
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(mat[i][j] == 0){
                    q.push({i, j, 0});
                }
            }
        }
        vector<vector<int>> dir = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
        while(!q.empty()){
            auto el = q.front();
            q.pop();
            int x = el[0];
            int y = el[1];
            int time = el[2];
            for(auto it : dir){
                int nx = x + it[0];
                int ny = y + it[1];
                if(nx >= 0 && nx < m && ny >= 0 && ny < n && mat[nx][ny] == 1){
                    mat[nx][ny] = time;
                    q.push({nx, ny, time+1});
                }
            }
        }
        return mat;
    }
};
