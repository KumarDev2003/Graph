Question :- https://leetcode.com/problems/is-graph-bipartite/description/

class Solution {
public:
    bool dfs(int u, vector<int>& visit, vector<vector<int>>& graph, int par, int col, vector<int>& color){
        visit[u] = 1;
        color[u] = col; 
        for(auto v : graph[u]){
            if(visit[v] == 0){
                if(dfs(v, visit, graph, u, !col, color) == false) return false;
            }else if(v != par && col == color[v]){
                return false;
            }
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> visit(n, 0);
        vector<int> color(n, -1);
        for(int i=0; i<n; i++){
            if(visit[i] == 1) continue;
            if(!dfs(i, visit, graph, -1, 0, color)) return false;
        }
        return true;
    }
};
